div.exo-form-input {
  display: flex;
  flex-flow: row wrap;
  align-items: flex-end;
  width: 100%;

  &.exo-form-inline {
    flex-wrap: nowrap;
    width: calc(100% + #{$global-margin}) !important;
  }

  // Flex break items so they are full-width.
  > .field-label,
  > .description,
  > .field-error,
  .form-item--error-message,
  &:after {
    flex-basis: 100%;
    margin: 0;
  }

  // Flex main area take up full width.
  > .exo-form-input-item,
  > .field-input,
  > .counter {
    flex: 1 1 10%;
    width: auto;
    margin: 0;
  }

  .field-input {
    position: relative;
    display: flex !important;
    flex-flow: row nowrap;
    align-items: flex-end;
    width: 100%;

    > div {
      width: 100%;
    }
  }

  .exo-form-input-item {
    width: 100%;
    z-index: 1;
    overflow: hidden;
  }

  .exo-form-input-item,
  .field-prefix,
  .field-suffix {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    display: block;
    box-shadow: none;
    outline: none;
    border: 0;
    margin: 0;
    height: $input-height;
    min-height: $input-height;
    // Not needed. Breaks datetime fields.
    // line-height: $input-height;
    font-size: $input-font-size;
    padding: $input-padding;
    box-sizing: border-box;
    border-radius: 0;
    outline: none !important;

    &:focus,
    &.form-textarea:focus {
      outline: 0;
      box-shadow: none;
    }
  }

  .field-prefix,
  .field-suffix {
    line-height: $input-height;
    z-index: 2;
    width: auto;
    white-space: nowrap;

    br {
      display: none;
    }
  }

  &.has-prefix {

    .exo-form-input-item {
      border-left-width: 0px !important;
      padding-left: 0 !important;
    }
  }

  &.has-suffix {

    .exo-form-input-item {
      border-right-width: 0px !important;
      padding-right: 0 !important;
    }
  }

  .field-prefix {
    padding-right: rem-calc(5) !important;
    border-right-width: 0px !important;
  }

  .field-suffix {
    padding-left: rem-calc(5) !important;
    border-left-width: 0px !important;
  }

  .form-textarea-wrapper {
    box-shadow: none;
  }

  textarea {
    height: auto;

    &.exo-form-input-item {
      overflow: auto;

      &,
      &:focus {
        padding-top: $input-line-height / 2;
        padding-bottom: $input-line-height / 2;
        line-height: $input-line-height;
        height: auto;
        min-height: $input-height;
      }
    }
  }

  .form-textarea-wrapper {
    width: 100%;
  }

  // Message area.
  &:after {
    display: block;
    position: absolute;
    top: 100%;
    content: '';
    font-size: $message-font-size;
    line-height: $label-font-size;
    text-transform: uppercase;
    z-index: 10;
    text-rendering: optimizeLegibility;
    // visibility: hidden;
    opacity: 0;
    // margin-top: $global-margin;
    transform: scale(0);
    transform-origin: center top;
    transition: opacity $global-speed, transform $global-speed !important;
    z-index: 100;

  }

  // When ready.
  &.ready {

    > .field-label,
    > .field-prefix,
    > .field-suffix,
    &:after {
      transition: all $global-speed ease-out;
    }
  }

  // When invalid.
  &.invalid {

    &:after {
      content: attr(data-error);
      padding: rem-calc(0 10);
    }
  }

  &.invalid.focused {

    &:after {
      opacity: 1;
      transform: scale(1);
      // margin-top: 0;
    }
  }

  // When disabled.
  &.form-disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

// Input labels can be floated above their input fields.
.exo-form-element-float {

  &.exo-form-input {
    padding: ($global-margin * .5) 0 0;

    > .field-label {
      @include label-overlay;
    }

    // Message area.
    &:after {
      top: $input-height + rem-calc(1);
    }

    &.active,
    &.force-active {

      > .field-label {
        @include label-float;
      }
    }
  }
}

.exo-form-element-float-inside {

  &.has-label {
    @include placeholder-hide;
  }

  &.exo-form-input {
    @include label-float-inside-wrapper;
  }
}
