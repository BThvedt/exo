"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,_toPropertyKey(o.key),o)}}function _createClass(e,t,i){return t&&_defineProperties(e.prototype,t),i&&_defineProperties(e,i),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0===i)return("string"===t?String:Number)(e);i=i.call(e,t||"default");if("object"!==_typeof(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}!function(i,e){var o=function(){function t(e){_classCallCheck(this,t),this.$element=e,this.$field=this.$element.find('input[type="file"]'),this.$field.after('<div class="exo-form-input-line" />'),this.bind()}return _createClass(t,[{key:"bind",value:function(){var e=this;this.$field.on("change.exo.form.file",function(){e.onChange.call(e)})}},{key:"onChange",value:function(e){var t;""!=this.$field.val()&&(t=this.$field.val().toString().replace(/.*(\/|\\)/,""),this.$field.closest(".exo-form-file-input").attr("data-text",t))}}]),t}();e.behaviors.exoFormFile={attach:function(e){i(e).find(".exo-form-file-js").once("exo.form.file").each(function(e,t){new o(i(t))})}}}(jQuery,Drupal);