{"version":3,"sources":["exo/src/scss/exo.element.options.scss","../../Sites/augustAsh/msep/web/modules/contrib/exo/exo/src/scss/util/_flex.scss"],"names":[],"mappings":"AAIE,4DACE,mBAAA,CAQA,uCACE,QAAA,CAQA,+DACE,uBAAA,CAKA,sEACE,yBAAA,CAMR,kCACE,qBAAA,CAGF,iJAGE,iBAAA,CAGF,mCACE,QAAA,CAEA,yCACE,aAAA,CACA,qBAAA,CACA,wBAAA,CACA,QAAA,CACA,oIAAA,CACA,sBAAA,CACA,eAAA,CAEA,+CACE,SAAA,CAMF,gDACE,SAAA,CACA,oBAAA,CACA,wBAAA,CACA,UAAA,CACA,mCAAA,CAMF,iDACE,0BAAA,CACA,kBAAA,CAKN,2EAEE,iBAAA,CACA,YAAA,CACA,SAAA,CAKA,wCCHF,qBDIgC,CCvChC,sBAfQ,CAgBR,kBARQ,CDgDJ,mBAAA,CACA,iBAAA,CACA,UAAA,CAEA,mDACE,QAAA,CACA,UAAA,CAMF,qDACE,qBAAA,CASI,uFACE,gCAAA,CAQN,iEACE,yBAAA,CAKA,4EACE,iBAAA,CAOJ,gEACE,uBAAA,CACA,yBAAA,CAQN,uCCzHF,YAAA,CAyBA,0BAfQ,CAgBR,mBARQ,CA0CR,kBDgEgC,CAG9B,8CC/HF,YAAA,CAyBA,sBAfQ,CAgBR,mBARQ,CDiHJ,oDACE,oBAAA,CACA,kBAAA,CACA,iBAAA,CACA,WAAA,CASI,sFACE,sBAAA,CAQN,gEACE,yBAAA,CAKA,2EACE,iBAAA,CAOJ,+DACE,sBAAA,CACA,yBAAA,CASN,kFClLF,YAAA,CDoLI,cAAA,CACA,6BAAA,CACA,gBAAA,CAEA,sFACE,WAAA,CAIJ,gGACE,QAAA,CAIE,oIACE,aAAA,CACA,UAAA,CAIJ,4GACE,sBAAA,CACA,WAAA,CACA,iBAAA,CACA,iBAAA,CAOE,4IACE,sBAAA,CAMF,kJACE,yBAAA,CASR,6CACE,0BAAA,CAEA,+CACE,WAAA,CAOJ,4CACE,iBAAA,CACA,0BAAA,CAKN,YACE,oBAAA,CACA,aAAA,CACA,cAAA,CACA,sBAAA,CACA,qBAAA,CACA,eAAA,CACA,qBAAA,CACA,8CAAA,CACA,qBAAA,CAEA,mCACE,gCAAA,CACA,kQAAA,CAGF,kBACE,aAAA,CACA,cAAA,CAGF,mBACE,cAAA","file":"exo.element.options.css","sourcesContent":["@import 'exo-common';\n\nfieldset.exo-element-options { // sass-lint:disable-line no-qualifying-elements force-element-nesting\n\n  .fieldset-wrapper > .description {\n    margin-bottom: $global-margin * 0.5;\n  }\n}\n\ndiv.exo-element-options { // sass-lint:disable-line no-qualifying-elements force-element-nesting\n\n  > div {\n\n    .form-item {\n      margin: 0;\n    }\n  }\n\n  &.hide-empty {\n\n    .exo-form-radio {\n\n      &:first-child {\n        display: none !important;\n      }\n\n      &:nth-child(2) {\n\n        label {\n          border-radius: 5px 0 0 5px;\n        }\n      }\n    }\n  }\n\n  .exo-icon {\n    vertical-align: middle;\n  }\n\n  .exo-icon-label,\n  .exo-form-checkbox .option, // sass-lint:disable-line no-qualifying-elements force-element-nesting\n  .option > .exo-form-radio-label {\n    font-size: rem-calc(10);\n  }\n\n  .form-item {\n    margin: 0;\n\n    label {\n      display: block;\n      border: 1px solid gray(20);\n      padding: rem-calc(5 10);\n      margin: 0;\n      transition: color $global-speed ease, background-color $global-speed ease, border-color $global-speed ease, opacity $global-speed ease, text-shadow $global-speed ease !important;\n      box-sizing: content-box;\n      overflow: hidden;\n\n      &:hover {\n        opacity: 1;\n      }\n    }\n\n    &.active {\n\n      label {\n        opacity: 1;\n        border-color: color(theme-primary);\n        background-color: color(theme-primary);\n        color: color(theme-white);\n        text-shadow: 0 1px alpha(theme-black, 0.5);\n      }\n    }\n\n    &.focused {\n\n      label {\n        outline: 1px dotted color(theme-primary);\n        outline-offset: 1px;\n      }\n    }\n  }\n\n  .form-radio,\n  .form-checkbox {\n    position: absolute;\n    left: -9999px;\n    opacity: 0;\n  }\n\n  &.exo-stacked {\n\n    > div {\n      @include exo-flex-direction(column);\n      @include flex-align(center, middle);\n      display: inline-flex;\n      text-align: center;\n      width: auto;\n\n      > .form-item {\n        margin: 0;\n        width: 100%;\n      }\n    }\n\n    .form-item {\n\n      label {\n        border-bottom-width: 0;\n      }\n\n      &.active {\n\n        &.checkbox {\n\n          &:not(:first-child) {\n\n            label {\n              border-top-color: color(theme-white) !important;\n            }\n          }\n        }\n      }\n\n      &:first-child {\n\n        label {\n          border-radius: 5px 5px 0 0;\n        }\n\n        &:last-child {\n\n          label {\n            border-radius: 5px;\n          }\n        }\n      }\n\n      &:last-child {\n\n        label {\n          border-bottom-width: 1px;\n          border-radius: 0 0 5px 5px;\n        }\n      }\n    }\n  }\n\n  &.exo-inline {\n\n    > div {\n      @include flex;\n      @include flex-align(left, stretch);\n      @include exo-flex-direction(row);\n    }\n\n    .form-item {\n      @include flex;\n      @include flex-align(center, stretch);\n\n      label {\n        border-right-width: 0;\n        min-width: rem-calc(30);\n        text-align: center;\n        height: auto;\n      }\n\n      &.active {\n\n        &.checkbox {\n\n          &:not(:first-child) {\n\n            label {\n              border-left-color: color(theme-white);\n            }\n          }\n        }\n      }\n\n      &:first-child {\n\n        label {\n          border-radius: 5px 0 0 5px;\n        }\n\n        &:last-child {\n\n          label {\n            border-radius: 5px;\n          }\n        }\n      }\n\n      &:last-child {\n\n        label {\n          border-right-width: 1px;\n          border-radius: 0 5px 5px 0;\n        }\n      }\n    }\n  }\n\n  &.exo-grid,\n  &.exo-grid-compact {\n\n    > div {\n      @include flex;\n      flex-wrap: wrap;\n      justify-content: space-between;\n      margin: rem-calc(-2);\n\n      > * {\n        flex-grow: 1;\n      }\n    }\n\n    .form-item {\n      margin: 0;\n\n      .field-label {\n\n        > span {\n          display: block;\n          width: 100%;\n        }\n      }\n\n      label {\n        margin: rem-calc(2 2);\n        height: auto;\n        border-radius: 5px;\n        text-align: center;\n      }\n\n      &.active {\n\n        &.checkbox {\n\n          label {\n            border-left-color: color(theme-white);\n          }\n        }\n\n        &:first-child {\n\n          label {\n            border-left-color: color(theme-primary);\n          }\n        }\n      }\n    }\n  }\n\n  &.exo-grid-compact {\n\n    > div {\n      justify-content: flex-start;\n\n      > * {\n        flex-grow: 0;\n      }\n    }\n  }\n\n  .active {\n\n    .exo-swatch {\n      border-color: color(theme-white);\n      box-shadow: 0 0 5px darken(color(theme-primary), 20%);\n    }\n  }\n}\n\n.exo-swatch {\n  display: inline-block;\n  width: rem-calc(10);\n  height: rem-calc(10);\n  border: 1px dotted gray(50);\n  vertical-align: middle;\n  margin-top: -2px;\n  margin-right: rem-calc(5);\n  transition: border-color 300ms, box-shadow 300ms;\n  box-sizing: border-box;\n\n  &.exo-swatch-transparent {\n    background-color: gray(20) !important;\n    background-image: url('data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" viewBox=\"0 0 8 8\"%3E%3Cg fill=\"%23ffffff\" fill-opacity=\"1\"%3E%3Cpath fill-rule=\"evenodd\" d=\"M0 0h4v4H0V0zm4 4h4v4H4V4z\"/%3E%3C/g%3E%3C/svg%3E') !important;\n  }\n\n  &.large {\n    width: rem-calc(20);\n    height: rem-calc(20);\n  }\n\n  &.no-pad {\n    margin-right: 0;\n  }\n}\n","@function -exo-flex-justify($text-direction) {\n  $-exo-flex-justify: (\n    'left': if($text-direction == rtl, flex-end, flex-start),\n    'right': if($text-direction == rtl, flex-start, flex-end),\n    'center': center,\n    'justify': space-between,\n    'spaced': space-around,\n  );\n  @return $-exo-flex-justify;\n}\n\n$-exo-flex-align: (\n  'top': flex-start,\n  'bottom': flex-end,\n  'middle': center,\n  'stretch': stretch,\n  'baseline': baseline,\n);\n\n$-exo-flex-direction: (\n  'row': row,\n  'row-reverse': row-reverse,\n  'column': column,\n  'column-reverse': column-reverse,\n);\n\n/// Enables flexbox by adding `display: flex` to the element.\n@mixin flex {\n  display: flex;\n}\n\n/// Horizontally or vertically aligns the items within a flex container.\n///\n/// @param {Keyword} $x [null] - Horizontal alignment to use. Can be `left`, `right`, `center`, `justify`, or `spaced`. Or, set it to `null` (the default) to not set horizontal alignment.\n/// @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`, `bottom`, `middle`, `baseline`, or `stretch`. Or, set it to `null` (the default) to not set vertical alignment.\n@mixin flex-align($x: null, $y: null) {\n  @if $x {\n    @if map-has-key($-exo-flex-justify, $x) {\n      $x: map-get($-exo-flex-justify, $x);\n    }\n    @else {\n      @warn 'flex-grid-row-align(): #{$x} is not a valid value for horizontal alignment. Use left, right, center, justify, or spaced.';\n    }\n  }\n  @if $y {\n    @if map-has-key($-exo-flex-align, $y) {\n      $y: map-get($-exo-flex-align, $y);\n    }\n    @else {\n      @warn 'flex-grid-row-align(): #{$y} is not a valid value for vertical alignment. Use top, bottom, middle, or stretch.';\n    }\n  }\n\n  justify-content: $x;\n  align-items: $y;\n}\n\n/// Vertically align a single column within a flex row. Apply this mixin to a flex column.\n///\n/// @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`, `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not set vertical alignment.\n@mixin flex-align-self($y: null) {\n  @if $y {\n    @if map-has-key($-exo-flex-align, $y) {\n      $y: map-get($-exo-flex-align, $y);\n    }\n    @else {\n      @warn 'flex-grid-column-align(): #{$y} is not a valid value for alignment. Use top, bottom, middle, or stretch.';\n    }\n  }\n\n  align-self: $y;\n}\n\n/// Changes the source order of a flex child. Children with lower numbers appear first in the layout.\n/// @param {Number} $order [0] - Order number to apply.\n@mixin flex-order($order: 0) {\n  order: $order;\n}\n\n/// Change flex-direction\n/// @param {Keyword} $direction [row] - Flex direction to use. Can be\n///   - row (default): same as text direction\n///   - row-reverse: opposite to text direction\n///   - column: same as row but top to bottom\n///   - column-reverse: same as row-reverse top to bottom\n/// @param {Keyword} $medium-direction [$direction] - Flex direction to use for medium. Defaults to $direction but can be `row`, `row-reverse`, `column`, or `column-reverse`.\n/// @param {Keyword} $large-direction [$medium-direction] - Flex direction to use for large. Defaults to $medium-direction but can be `row`, `row-reverse`, `column`, or `column-reverse`.\n@mixin exo-flex-direction($direction: row, $medium-direction: $direction, $large-direction: $medium-direction) {\n  flex-direction: $direction;\n\n  @if ($medium-direction != $direction) {\n\n    @include breakpoint(medium) {\n      flex-direction: $medium-direction;\n    }\n  }\n\n  @if ($large-direction != $medium-direction) {\n\n    @include breakpoint(large) {\n      flex-direction: $large-direction;\n    }\n  }\n}\n\n"]}