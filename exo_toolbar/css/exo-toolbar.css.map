{"version":3,"sources":["exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/base/_debug.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_toolbar.scss","exo/src/scss/base/_mixins.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_region.scss","exo/src/scss/util/_flex.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_section.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_item.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_item-divider.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_element.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_element-list.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_element-grid.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_list.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_aside.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/base/_mixins.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_aside.label.scss","exo/src/scss/base/_variables.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_sort.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/components/_dialog.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/items/_create.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/items/_user.scss","exo_toolbar/src/ExoThemeProvider/ExoToolbar/scss/items/_toggle.scss"],"names":[],"mappings":"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","file":"exo-toolbar.css","sourcesContent":[".exo-toolbar-debug {\n  $region-color: #ff0;\n  $section-color: #ffa500;\n  $item-color: #adff2f;\n\n  .exo-toolbar-region {\n    outline: 1px dotted $region-color;\n    outline-offset: -2px;\n  }\n\n  .exo-toolbar-section {\n    outline: 1px dotted $section-color;\n    outline-offset: -5px;\n  }\n\n  .exo-toolbar-item {\n    outline: 1px dotted $item-color;\n    outline-offset: -8px;\n  }\n\n}\n",".exo-toolbar {\n  @include exo-progress-throbber;\n  position: relative;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .menu-item {\n    list-style-type: none;\n  }\n}\n","/////////////////////\n// Font Face\n// Generates the proper font styles from a linked font file(s)\n// ---------\n@use \"sass:math\";\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: '?',\n    svg: '#' + str-replace($name, ' ', '_')\n  );\n\n  $formats: (\n    otf: 'opentype',\n    ttf: 'truetype'\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n    font-display: swap;\n  }\n}\n\n/////////////////////\n// Use icon\n\n@function add-backslash($character) {\n  @return unquote('\"') + unquote(str-insert($character, '\\\\', 1)) + unquote('\"');\n}\n\n@mixin exo-icon($package, $hex, $position: before) {\n  &:#{$position} {\n    -webkit-font-smoothing: antialiased; // sass-lint:disable-line no-vendor-prefixes\n    -moz-osx-font-smoothing: grayscale; // sass-lint:disable-line no-vendor-prefixes\n    font-family: 'icon-#{$package}' !important; // stylelint-disable-line declaration-no-important\n    display: inline-block;\n    font-style: normal;\n    font-variant: normal;\n    font-weight: normal;\n    line-height: 1;\n    content: add-backslash($hex);\n    @content;\n  }\n}\n\n/////////////////////\n// Sass CSS triangle mixin, create any kind of triangles with ease\n//\n// Use:\n// @include triangle(direction,width,height,color);\n//\n// Example:\n// $square: 50px;\n// $color: red;\n// selector {\n// *\t @include triangle(bottomright,$square,$square,$color);\n// }\n//\n// Forked from https://github.com/juanbrujo/triangle-mixin.less\n@mixin exo-triangle($direction, $size-h, $size-v, $color) {\n  content: '';\n  display: inline-block;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  transform: scale(0.9999);\n  vertical-align: middle;\n\n  @if $direction == top {\n    border-width: 0 $size-v $size-h;\n    border-color: transparent transparent $color;\n  }\n  @if $direction == bottom {\n    border-width: $size-v $size-h 0 $size-v;\n    border-color: $color transparent transparent;\n  }\n  @if $direction == left {\n    border-width: $size-v $size-h $size-v 0;\n    border-color: transparent $color transparent transparent;\n  }\n  @if $direction == right {\n    border-width: $size-v 0 $size-v $size-h;\n    border-color: transparent transparent transparent $color;\n  }\n  @if $direction == topright {\n    border-width: 0 $size-h $size-v 0;\n    border-color: transparent $color transparent transparent;\n  }\n  @if $direction == bottomright {\n    border-width: 0 0 $size-h $size-v;\n    border-color: transparent transparent $color;\n  }\n  @if $direction == bottomleft {\n    border-width: $size-h 0 0 $size-v;\n    border-color: transparent transparent transparent $color;\n  }\n  @if $direction == topleft {\n    border-width: $size-h $size-v 0 0;\n    border-color: $color transparent transparent;\n  }\n  @content;\n}\n\n/////////////////////\n// Breakpoints\n// --------\n/// Iterates through breakpoints defined in `$breakpoint-classes` and prints the CSS inside the mixin at each breakpoint's media query. Use this with the grid, or any other component that has responsive classes.\n///\n/// @param {Boolean} $small [true] - If `false`, the mixin will skip the `small` breakpoint. Use this with components that don't prefix classes with `small-`, only `medium-` and up.\n/// @param {Boolean} $auto-insert-breakpoints [true] - If `false`, the mixin will iterate over breakpoints without doing the media query itself. Useful for more complex media query generation as in the margin grid.\n@mixin exo-each-breakpoint($small: true, $auto-insert-breakpoints: true) {\n  $list: $breakpoint-classes;\n\n  @if not $small {\n    $list: sl-remove($list, $-zf-zero-breakpoint);\n  }\n\n  @each $name in $list {\n    $old-exo-size: null;\n    @if global-variable-exists(exo-size) {\n      $old-exo-size: $exo-size;\n    }\n    $exo-size: $name !global;\n\n    @if $auto-insert-breakpoints {\n      @include breakpoint($name) {\n        @content;\n      }\n    }\n    @else {\n      @content;\n    }\n\n    $exo-size: $old-exo-size !global;\n  }\n}\n\n@mixin exo-progress-throbber() {\n  .ajax-progress-throbber {\n    position: fixed !important;\n    top: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    bottom: 0 !important;\n    background: alpha(theme-black, 0.2) !important;\n    z-index: 1000 !important;\n\n    .throbber {\n      position: fixed !important;\n      top: 50% !important;\n      right: 50% !important;\n      bottom: 50% !important;\n      left: 50% !important;\n      width: 16px !important;\n      height: 16px !important;\n      margin-top: -8px !important;\n      margin-left: -8px !important;\n      text-align: center !important;\n      background-color: color(theme-white) !important;\n      background-position: center center !important;\n      border-radius: 50% !important;\n      padding: $global-padding !important;\n    }\n\n    .message {\n      display: none;\n    }\n  }\n}\n\n/////////////////////\n// Exo Breakpoint Mixin\n// ---------\n/// Generate the `@content` passed to the mixin with a value `$-zf-bp-value` related to a breakpoint, depending on the `$name` parameter:\n/// - For a single value, `$-zf-bp-value` is this value.\n/// - For a breakpoint name, `$-zf-bp-value` is the corresponding breakpoint value in `$map`.\n/// - For \"auto\", `$-zf-bp-value` is the corresponding breakpoint value in `$map` and is passed to `@content`, which is made responsive for each breakpoint of `$map`.\n/// @param {Number|Array|Keyword} $name [auto] - Single value, breakpoint name, or list of breakpoint names to use. \"auto\" by default.\n/// @param {Number|Map} $map - Map of breakpoints and values or single value to use.\n@mixin -exo-breakpoint-value(\n  $name: auto,\n  $map: null\n) {\n  @if $name == auto and type-of($map) == 'map' {\n    // \"auto\"\n    @each $k, $v in $map {\n      @include breakpoint($k) {\n        @include -exo-breakpoint-value($v, $map) {\n          @content;\n        }\n      }\n    }\n  }\n  @else {\n    // breakpoint name\n    @if type-of($name) == 'string' {\n      $name: -exo-get-bp-val($map, $name);\n    }\n\n    // breakpoint value\n    $-exo-bp-value: $name !global;\n    @content;\n  }\n}\n\n/// Removes the focus ring around an element when a mouse input is detected.\n@mixin disable-mouse-outline {\n  [data-whatinput='mouse'] & {\n    outline: 0;\n  }\n}\n\n/// Applies the micro clearfix hack popularized by Nicolas Gallagher. Include this mixin on a container if its children are all floated, to give the container a proper height.\n/// The clearfix is augmented with specific styles to prevent borders in flexbox environments\n/// @link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix Hack\n/// @link http://danisadesigner.com/blog/flexbox-clear-fix-pseudo-elements/ Flexbox fix\n@mixin clearfix {\n  &::before,\n  &::after {\n    display: table;\n    content: ' ';\n  }\n\n  &::after {\n    clear: both;\n  }\n}\n\n/////////////////////\n// Menu Base Mixin\n// --------\n/// Creates the base styles for a Menu.\n@mixin menu-base {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  position: relative;\n\n  li {\n    @include disable-mouse-outline;\n  }\n\n  a,\n  .button {\n    line-height: 1;\n    text-decoration: none;\n    display: block;\n    padding: $menu-items-padding;\n  }\n\n  // Reset styles of inner elements\n  input,\n  select,\n  a,\n  button {\n    margin-bottom: 0;\n  }\n\n  input {\n    display: inline-block;\n  }\n}\n\n/////////////////////\n// Touchscreen Mixin\n// --------\n/// Apply specific styles based on hover events detected for touchscreen\n/// where primary input is not a mouse.\n@mixin touchscreen() {\n  @media (hover: none) and (pointer: coarse) {\n    @content;\n  }\n}\n\n/////////////////////\n// IE Support Mixin\n// --------\n/// IE can be super fun and doesn't support some of the stuff we are trying to do.\n/// Use this mixin to pass IE specific styles.\n@mixin iesupport() {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/*\n* Dotted Border - A SASS mixin to help you increase spacing between the dots of border-style:dotted.\n* By @florbraz\n* Documentation and examples - github.com/florbraz/Dotted-Border-w-custom-spacing-SCSS-Mixin\n* V1.0\n*/\n@mixin dottedBorder($color: #8f8f8f, $orientation: horizontal, $position: top, $spacing: 5px, $size: 1px) {\n  background-position: $position;\n  @if $orientation == horizontal {\n    background-image: linear-gradient(to right, $color math.div($size, $spacing) * 100%, rgba(255,255,255,0) 0%);\n    background-size: $spacing $size;\n    background-repeat: repeat-x;\n  }\n  @else {\n    background-image: linear-gradient($color math.div($size, $spacing) * 100%, rgba(255,255,255,0) 0%);\n    background-size: $size $spacing;\n    background-repeat: repeat-y;\n  }\n  .ie9 & {\n    border-#{$position}:1px dotted $color;\n  }\n}\n\n/**\n * Hide elements visually, but keep them available for screen readers.\n *\n * Used for information required for screen reader users to understand and use\n * the site where visual display is undesirable. Information provided in this\n * manner should be kept concise, to avoid unnecessary burden on the user.\n * \"!important\" is used to prevent unintentional overrides.\n */\n @mixin visually-hidden($focusable: false) {\n  position: absolute !important;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n  height: 1px;\n  width: 1px;\n  word-wrap: normal;\n\n  /**\n   * The .focusable class extends the .visually-hidden class to allow\n   * the element to be focusable when navigated to via the keyboard.\n   */\n  @if $focusable {\n    &:active,\n    &:focus {\n      position: static !important;\n      clip: auto;\n      overflow: visible;\n      height: auto;\n      width: auto;\n    }\n  }\n}\n",".exo-toolbar-region {\n  @include flex;\n  position: fixed;\n\n  // This class is used rarely to make sure a region has a high z-index.\n  // @see toggle.\n  &.exo-toolbar-region-focus {\n    z-index: 100 !important;\n  }\n\n  .exo-toolbar-region-inner {\n    @include flex;\n    @include flex-align(justify, stretch);\n    position: relative;\n    // Removed due to bug with Safari \"fixed\" positioning that caused asides\n    // not to show up.\n    // z-index: 2;\n  }\n\n  @each $key, $edge in $region-edges {\n    &[data-exo-edge='#{$key}'] {\n      @each $property, $value in map-get($region-edges, $key) {\n        #{$property}: $value;\n      }\n    }\n  }\n\n  &[data-exo-align='horizontal'] {\n    @include exo-flex-direction(row);\n    z-index: 12;\n\n    .exo-toolbar-region-overflow {\n      width: 100%;\n    }\n\n    .exo-toolbar-region-inner {\n      @include exo-flex-direction(row);\n      width: 100%;\n      overflow-x: auto;\n    }\n  }\n\n  &[data-exo-align='vertical'] {\n    @include exo-flex-direction(column);\n    z-index: 10;\n    transition: width $global-speed;\n\n    .exo-toolbar-region-overflow {\n      height: 100%;\n    }\n\n    .exo-toolbar-region-inner {\n      @include exo-flex-direction(column);\n      height: 100%;\n      overflow-y: auto;\n    }\n\n    .exo-toolbar-section,\n    .exo-toolbar-item {\n      @include exo-flex-direction(column);\n    }\n\n    // Vertical regions have the ability to be expanded.\n    @each $key, $sizes in $region-sizes {\n      &[data-exo-size='#{$key}'] {\n        width: rem-calc(map-get($sizes, 'element'));\n\n        .exo-toolbar-region-overflow {\n          overflow: hidden;\n        }\n\n        .exo-toolbar-region-inner {\n          width: rem-calc(map-get($sizes, 'expanded'));\n        }\n\n        &.exo-toolbar-region-expanded {\n          width: rem-calc(map-get($sizes, 'expanded'));\n        }\n      }\n    }\n  }\n}\n\n.exo-toolbar-region-divider {\n  $divider-offset: 20px;\n  position: absolute;\n  z-index: -1;\n  box-shadow: 0 0 2px color(theme-black);\n  pointer-events: none;\n\n  .exo-toolbar-region-last & {\n    box-shadow: 0 0 20px color(theme-black);\n  }\n\n  [data-exo-edge='top'] & {\n    bottom: 0;\n    height: 100px;\n    border-radius: 100px / 10px;\n    opacity: 0.3;\n  }\n\n  [data-exo-edge='bottom'] & {\n    top: 0;\n    height: 100px;\n    border-radius: 100px / 10px;\n    opacity: 0.3;\n  }\n\n  [data-exo-edge='left'] & {\n    right: 0;\n    width: 100px;\n    border-radius: 10px / 100px;\n    opacity: 0.3;\n  }\n\n  [data-exo-edge='right'] & {\n    left: 0;\n    width: 100px;\n    border-radius: 10px / 100px;\n    opacity: 0.3;\n  }\n}\n","@function -exo-flex-justify($text-direction) {\n  $-exo-flex-justify: (\n    'left': if($text-direction == rtl, flex-end, flex-start),\n    'right': if($text-direction == rtl, flex-start, flex-end),\n    'center': center,\n    'justify': space-between,\n    'spaced': space-around,\n  );\n  @return $-exo-flex-justify;\n}\n\n$-exo-flex-align: (\n  'top': flex-start,\n  'bottom': flex-end,\n  'middle': center,\n  'stretch': stretch,\n  'baseline': baseline,\n);\n\n$-exo-flex-direction: (\n  'row': row,\n  'row-reverse': row-reverse,\n  'column': column,\n  'column-reverse': column-reverse,\n);\n\n/// Enables flexbox by adding `display: flex` to the element.\n@mixin flex {\n  display: flex;\n}\n\n/// Horizontally or vertically aligns the items within a flex container.\n///\n/// @param {Keyword} $x [null] - Horizontal alignment to use. Can be `left`, `right`, `center`, `justify`, or `spaced`. Or, set it to `null` (the default) to not set horizontal alignment.\n/// @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`, `bottom`, `middle`, `baseline`, or `stretch`. Or, set it to `null` (the default) to not set vertical alignment.\n@mixin flex-align($x: null, $y: null) {\n  @if $x {\n    @if map-has-key($-exo-flex-justify, $x) {\n      $x: map-get($-exo-flex-justify, $x);\n    }\n    @else {\n      @warn 'flex-grid-row-align(): #{$x} is not a valid value for horizontal alignment. Use left, right, center, justify, or spaced.';\n    }\n  }\n  @if $y {\n    @if map-has-key($-exo-flex-align, $y) {\n      $y: map-get($-exo-flex-align, $y);\n    }\n    @else {\n      @warn 'flex-grid-row-align(): #{$y} is not a valid value for vertical alignment. Use top, bottom, middle, or stretch.';\n    }\n  }\n\n  justify-content: $x;\n  align-items: $y;\n}\n\n/// Vertically align a single column within a flex row. Apply this mixin to a flex column.\n///\n/// @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`, `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not set vertical alignment.\n@mixin flex-align-self($y: null) {\n  @if $y {\n    @if map-has-key($-exo-flex-align, $y) {\n      $y: map-get($-exo-flex-align, $y);\n    }\n    @else {\n      @warn 'flex-grid-column-align(): #{$y} is not a valid value for alignment. Use top, bottom, middle, or stretch.';\n    }\n  }\n\n  align-self: $y;\n}\n\n/// Changes the source order of a flex child. Children with lower numbers appear first in the layout.\n/// @param {Number} $order [0] - Order number to apply.\n@mixin flex-order($order: 0) {\n  order: $order;\n}\n\n/// Change flex-direction\n/// @param {Keyword} $direction [row] - Flex direction to use. Can be\n///   - row (default): same as text direction\n///   - row-reverse: opposite to text direction\n///   - column: same as row but top to bottom\n///   - column-reverse: same as row-reverse top to bottom\n/// @param {Keyword} $medium-direction [$direction] - Flex direction to use for medium. Defaults to $direction but can be `row`, `row-reverse`, `column`, or `column-reverse`.\n/// @param {Keyword} $large-direction [$medium-direction] - Flex direction to use for large. Defaults to $medium-direction but can be `row`, `row-reverse`, `column`, or `column-reverse`.\n@mixin exo-flex-direction($direction: row, $medium-direction: $direction, $large-direction: $medium-direction) {\n  flex-direction: $direction;\n\n  @if ($medium-direction != $direction) {\n\n    @include breakpoint(medium) {\n      flex-direction: $medium-direction;\n    }\n  }\n\n  @if ($large-direction != $medium-direction) {\n\n    @include breakpoint(large) {\n      flex-direction: $large-direction;\n    }\n  }\n}\n\n",".exo-toolbar-section {\n  @include flex;\n  @include flex-align(left, middle);\n\n  &[data-exo-section='right'] {\n    margin-left: auto;\n  }\n\n  &[data-exo-section='bottom'] {\n    margin-top: auto;\n  }\n\n  [data-exo-align='vertical'] & {\n    @include flex-align(left, middle);\n  }\n}\n",".exo-toolbar-item {\n  @include flex;\n  @include flex-align(left, top);\n  position: relative;\n  width: 100%;\n\n  .is-ie & {\n    width: auto;\n  }\n\n  .exo-toolbar-item-operations {\n    visibility: hidden;\n    opacity: 0;\n    transition: opacity $global-speed;\n    padding: rem-calc(10);\n    list-style: none;\n  }\n\n  &:hover {\n\n    .exo-toolbar-item-operations {\n      visibility: visible;\n      opacity: 1;\n    }\n  }\n}\n",".exo-toolbar-item-type-divider {\n\n  .exo-toolbar-element-title {\n    font-size: rem-calc(9);\n    font-weight: 700;\n    text-transform: uppercase;\n    opacity: 0;\n  }\n\n  [data-exo-align='horizontal'] & {\n    border-left-width: 1px;\n    border-left-style: solid;\n\n    .exo-toolbar-element-title {\n      padding-left: rem-calc(10);\n      padding-right: rem-calc(5);\n    }\n  }\n\n  [data-exo-align='vertical'] & {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n\n    .exo-toolbar-element-title {\n      padding-top: rem-calc(10);\n      padding-bottom: rem-calc(5);\n      opacity: 0;\n      transition: opacity $global-speed;\n    }\n  }\n\n  .exo-toolbar-region-expanded[data-exo-align='vertical'] & {\n\n    .exo-toolbar-element-title {\n      opacity: 1;\n    }\n  }\n\n  .exo-toolbar-element > div {\n\n    [data-exo-align='horizontal'] & {\n      padding-left: 0;\n      padding-right: 0;\n    }\n\n    [data-exo-align='vertical'] & {\n      height: auto;\n      padding-top: 0;\n      padding-bottom: 0;\n    }\n  }\n}\n","@use \"sass:math\";\n\n.exo-toolbar-element {\n  // @include flex;\n  // @include flex-align(left, stretch);\n  display: flex;\n  // flex\n  text-decoration: none;\n  border: 0;\n  transition: all $global-speed;\n  white-space: nowrap;\n  width: 100%;\n  user-select: none;\n\n  &.as-link {\n    cursor: pointer;\n\n    &.is-active {\n      cursor: default;\n      font-weight: bold;\n    }\n  }\n\n  &.as-pill {\n    box-sizing: border-box;\n\n    &:not(.has-icon) {\n\n      .exo-toolbar-element-mark {\n        padding: 0;\n      }\n    }\n\n    .is-ie & {\n      width: auto;\n    }\n\n    @each $key, $sizes in $region-sizes {\n      [data-exo-size='#{$key}'] & {\n        border-radius: rem-calc(map-get($sizes, 'element') * 0.5);\n        margin: rem-calc(map-get($sizes, 'padding') * 0.5);\n\n        .exo-toolbar-element-inner {\n          font-size: rem-calc(map-get($sizes, 'text') * 0.75);\n          text-transform: uppercase;\n        }\n\n        .exo-toolbar-element-inner,\n        .exo-toolbar-element-mark {\n          height: rem-calc(map-get($sizes, 'element') - map-get($sizes, 'padding'));\n        }\n      }\n\n      [data-exo-size='#{$key}'] .mark-only-horizontal & {\n        &.has-mark .exo-toolbar-element-mark {\n          min-width: rem-calc(map-get($sizes, 'element') * 1.2);\n        }\n      }\n    }\n\n    [data-exo-align='vertical'] & {\n      width: calc(100% - #{rem-calc(math.div(map-get($sizes, 'padding'), 3))});\n    }\n\n    [data-exo-section='left'] & {\n      margin-right: 0 !important;\n    }\n\n    [data-exo-section='right'] & {\n      margin-left: 0 !important;\n    }\n  }\n}\n\n.exo-toolbar-element-hidden {\n  display: none;\n}\n\n.exo-toolbar-element-inner {\n  @include flex;\n  @include flex-align(left, middle);\n  flex: auto;\n\n  @each $key, $sizes in $region-sizes {\n    [data-exo-size='#{$key}'] & {\n      padding: rem-calc(map-get($sizes, 'padding'));\n      height: rem-calc(map-get($sizes, 'element'));\n      font-size: rem-calc(map-get($sizes, 'text'));\n    }\n  }\n\n  .has-icon-before & {\n    padding-left: size(padding) * 0.25;\n  }\n\n  .has-icon-after & {\n    padding-right: size(padding) * 0.25;\n  }\n\n  // A toolbar can be set to icon only mode.\n  .exo-toolbar-region-mark-only .has-mark & {\n    display: none;\n  }\n\n  // An element can be set to icon only when contained in a horizontal region.\n  [data-exo-align='horizontal'] .mark-only-horizontal .has-mark & {\n    display: none;\n  }\n  // An element can be set to icon only when contained in a vertical region.\n  [data-exo-align='vertical'] .mark-only-vertical .has-mark & {\n    display: none;\n  }\n}\n\n.exo-toolbar-element-mark {\n  @include flex;\n  @include flex-align(center, middle);\n  text-align: center;\n\n  @each $key, $sizes in $region-sizes {\n\n    [data-exo-size='#{$key}'] & {\n      height: rem-calc(map-get($sizes, 'element'));\n    }\n\n    [data-exo-align='horizontal'][data-exo-size='#{$key}'] & {\n      padding: rem-calc(map-get($sizes, 'padding'));\n    }\n\n    &.before {\n\n      [data-exo-align='horizontal'][data-exo-size='#{$key}'] & {\n        padding-right: 0;\n      }\n    }\n\n    &.after {\n\n      [data-exo-align='horizontal'][data-exo-size='#{$key}'] & {\n        padding-left: 0;\n      }\n\n      // A toolbar can be set to icon only mode.\n      .exo-toolbar-region-mark-only[data-exo-align='horizontal'][data-exo-size='#{$key}'] & {\n        // @TODO: We may want to hide the after mark?\n        padding-left: rem-calc(map-get($sizes, 'padding') * 0.5);\n      }\n    }\n\n    // No padding is needed when in horizontal and showing mark only.\n    [data-exo-align='horizontal'][data-exo-size='#{$key}'] .mark-only-horizontal .has-mark & {\n      width: rem-calc(map-get($sizes, 'element'));\n      padding: 0;\n    }\n\n    [data-exo-align='vertical'][data-exo-size='#{$key}'] .has-mark & {\n      width: rem-calc(map-get($sizes, 'element'));\n      padding: 0;\n    }\n  }\n\n  &.before {\n\n    .has-image-before & {\n      padding: 0 !important;\n    }\n  }\n\n  &.after {\n\n    .has-image-after & {\n      padding: 0 !important;\n    }\n  }\n}\n\n.exo-toolbar-element-icon {\n  transition: color $global-speed;\n\n  @each $key, $sizes in $region-sizes {\n    [data-exo-size='#{$key}'] & {\n\n      i {\n\n        &:before {\n          display: block;\n          font-size: rem-calc(map-get($sizes, 'icon'));\n          line-height: rem-calc(map-get($sizes, 'icon'));\n        }\n\n        &.exo-icon-size-small {\n\n          &:before {\n            font-size: rem-calc(map-get($sizes, 'icon') * 0.6);\n          }\n        }\n\n        &.exo-icon-size-large {\n\n          &:before {\n            font-size: rem-calc(map-get($sizes, 'icon') * 1.6);\n          }\n        }\n      }\n    }\n  }\n}\n\n.exo-toolbar-element-badge {\n  padding: rem-calc(2 3);\n  border-radius: 3px;\n  font-weight: 700;\n  line-height: 1;\n  text-align: center;\n\n  @each $key, $sizes in $region-sizes {\n    [data-exo-size='#{$key}'] & {\n      font-size: rem-calc(map-get($sizes, 'badge'));\n    }\n  }\n\n  .has-icon-after & {\n    margin-right: rem-calc(map-get($sizes, 'padding') * 0.25);\n  }\n}\n\n.badge-theme-success {\n\n  .exo-toolbar-element-badge {\n    background: color(theme-success);\n    color: color(theme-white);\n  }\n}\n\n.badge-theme-warning {\n\n  .exo-toolbar-element-badge {\n    background: color(theme-warning);\n    color: color(theme-white);\n  }\n}\n\n.badge-theme-alert {\n\n  .exo-toolbar-element-badge {\n    background: color(theme-alert);\n    color: color(theme-white);\n  }\n}\n\n.exo-toolbar-element-image {\n\n  &,\n  img {\n    @each $key, $sizes in $region-sizes {\n      [data-exo-size='#{$key}'] & {\n        width: rem-calc(map-get($sizes, 'element'));\n        height: rem-calc(map-get($sizes, 'element'));\n      }\n    }\n  }\n\n  img {\n    display: block;\n  }\n}\n","@use \"sass:math\";\n\n.exo-toolbar-element-list {\n  @include flex;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  width: rem-calc(200);\n\n  > li {\n    width: 100%;\n    text-align: center;\n    transition: background $global-speed, transform $global-speed;\n\n    > a {\n      display: block;\n      padding: rem-calc(5);\n      position: relative;\n      margin: 0 auto;\n    }\n\n    .exo-icon,\n    .exo-icon-label {\n      transition: color 300ms, transform math.div($global-speed, 3);\n    }\n\n    // .exo-icon {\n    //   display: block;\n    //   font-size: rem-calc(30);\n    //   padding-bottom: rem-calc(10);\n    // }\n\n    // &:hover {\n\n    //   > a {\n\n    //     .exo-icon {\n    //       transform: scale(0.95);\n    //     }\n    //   }\n    // }\n  }\n}\n","@use \"sass:math\";\n\n.exo-toolbar-element-grid {\n  @include flex;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  width: rem-calc(320);\n\n  > li {\n    width: 33.33%;\n    text-align: center;\n    transition: background-color $global-speed, transform $global-speed;\n\n    > a {\n      padding: rem-calc(20);\n      position: relative;\n      margin: 0 auto;\n    }\n\n    .exo-icon,\n    .exo-icon-label {\n      transition: color 300ms, transform math.div($global-speed, 3);\n    }\n\n    .exo-icon {\n      display: block;\n      font-size: rem-calc(30);\n      padding-bottom: rem-calc(10);\n    }\n\n    &:hover {\n\n      > a {\n\n        .exo-icon {\n          transform: scale(1.2);\n        }\n      }\n    }\n  }\n}\n",".exo-toolbar-list {\n  @include flex;\n\n  [data-exo-align='vertical'] & {\n    width: 100%;\n  }\n\n  > .exo-toolbar-element {\n\n    &.as-link.is-active {\n      cursor: pointer;\n    }\n  }\n\n  .exo-toolbar-list-secondary {\n    visibility: hidden;\n    opacity: 0;\n\n    .exo-toolbar-element-inner {\n      height: auto;\n    }\n  }\n\n  &:hover {\n\n    .exo-toolbar-list-secondary {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  > .exo-toolbar-element {\n\n    &.is-active {\n      font-weight: bold;\n    }\n  }\n}\n",".exo-toolbar-item-aside {\n  position: fixed;\n  z-index: 100;\n  pointer-events: none;\n\n  .exo-toolbar-aside-disable & {\n    display: none !important;\n  }\n\n  &[data-exo-toolbar-item-position='top:right'],\n  &[data-exo-toolbar-item-position='bottom:right'] {\n    text-align: right;\n  }\n}\n\n.exo-toolbar-item-aside-tip {\n  @include aside-arrow($color: theme-black);\n  display: block;\n  width: 100%;\n  transition: opacity $global-speed;\n  padding: rem-calc(10);\n  margin: 0;\n\n  a {\n    // display: block;\n    @include flex;\n    @include exo-flex-direction(column);\n    @include flex-align(center, middle);\n    text-align: center;\n    text-transform: uppercase;\n    text-rendering: optimizeLegibility;\n    font-size: rem-calc(11);\n    opacity: 0.8;\n    margin: (size(margin) * 0.1) auto;\n    transition: opacity $global-speed, color $global-speed;\n\n    &:hover {\n      opacity: 1;\n    }\n\n    .exo-icon {\n      text-shadow: none;\n    }\n  }\n\n  // Inverse Toolbar settings.\n  .exo-toolbar-region-inverse & {\n\n    a {\n      font-weight: bold;\n    }\n  }\n}\n\n.exo-toolbar-item {\n\n  // Make sure pointer events are active when item is active.\n  &.exo-toolbar-item-active,\n  // Make sure pointer events are active when hovering over parent item.\n  &:hover {\n\n    .exo-toolbar-item-aside {\n\n      > * {\n        pointer-events: auto;\n      }\n    }\n  }\n}\n","@mixin aside-arrow($color: theme-white) {\n  position: relative;\n\n  &:before {\n    content: '';\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-style: solid;\n    border-width: 10px 0 0 10px;\n    border-color: transparent transparent transparent rgba(color($color), 0.9);\n  }\n\n  [data-exo-toolbar-item-position='top:left'] & {\n    &:before {\n      top: -10px;\n      left: 0;\n    }\n  }\n\n  [data-exo-toolbar-item-position='top:right'] & {\n    &:before {\n      top: -10px;\n      right: 0;\n      transform: rotate(-90deg);\n    }\n  }\n\n  [data-exo-toolbar-item-position='bottom:left'] & {\n    &:before {\n      bottom: -10px;\n      left: 0;\n      transform: rotate(90deg);\n    }\n  }\n\n  [data-exo-toolbar-item-position='bottom:right'] & {\n    &:before {\n      bottom: -10px;\n      right: 0;\n      transform: rotate(180deg);\n    }\n  }\n\n  [data-exo-toolbar-item-position='left:top'] & {\n    &:before {\n      left: -10px;\n      top: 0;\n      transform: rotate(180deg);\n    }\n  }\n\n  [data-exo-toolbar-item-position='left:bottom'] & {\n    &:before {\n      left: -10px;\n      bottom: 0;\n      transform: rotate(-90deg);\n    }\n  }\n\n  [data-exo-toolbar-item-position='right:top'] & {\n    &:before {\n      right: -10px;\n      top: 0;\n      transform: rotate(90deg);\n    }\n  }\n\n  [data-exo-toolbar-item-position='right:bottom'] & {\n    &:before {\n      right: -10px;\n      bottom: 0;\n    }\n  }\n}\n",".exo-toolbar-item-aside-label {\n  @include aside-arrow(theme-primary);\n  position: absolute;\n  display: none;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  text-align: center;\n  pointer-events: none !important;\n  margin-top: rem-calc(5);\n  transition: visibility $global-speed, opacity $global-speed, margin $global-speed, width $global-speed;\n  transition-delay: 0;\n  box-shadow: 0 10px 10px rgba(color(theme-black), 0.3);\n  min-width: rem-calc(60);\n\n  @each $key, $sizes in $region-sizes {\n\n    [data-exo-size='#{$key}'] & {\n      padding: rem-calc(5 map-get($sizes, 'padding'));\n    }\n  }\n\n  // Set label to full width of dialog that opens on open.\n  .exo-toolbar-has-dialog-type-tip & {\n    width: 100%;\n  }\n\n  // Show when in a horizontal toolbar that is mark only.\n  .exo-toolbar-region-mark-only[data-exo-align='horizontal'] & {\n    display: inline-block;\n  }\n\n  [data-exo-align='horizontal'] .mark-only-horizontal & {\n    display: inline-block;\n  }\n}\n\n.exo-toolbar-item {\n\n  &.is-hover,\n  &.exo-toolbar-item-active {\n\n    .exo-toolbar-item-aside-label {\n\n      &.is-current {\n        visibility: visible;\n        opacity: 1;\n        margin-top: 0;\n        transition-delay: $global-speed;\n      }\n\n      [data-exo-region='bottom'] &,\n      [data-exo-region='bottom_alt'] & {\n        z-index: 1;\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n/// Colors\n////////////////////////////////////////////////////////////////////////////////\n\n$global-colors: (\n  theme-black: #1a1a1a,\n  theme-white: #fff,\n  theme-gray: #777,\n  theme-base: #373a3c,\n  theme-offset: #f1f1f1,\n  theme-primary: #2780e3,\n  theme-secondary: #b6bf3d,\n  theme-success: #86c13d,\n  theme-warning: #f1ba2e,\n  theme-alert: #e54040,\n) !default;\n\n// Themes will add colors to this variable.\n$colors: () !default;\n\n////////////////////////////////////////////////////////////////////////////////\n/// Globals\n////////////////////////////////////////////////////////////////////////////////\n$global-speed: 350ms;\n$global-radius: 3px;\n$global-font-size: 100%;\n$global-lineheight: 1.5;\n$global-speed: 350ms;\n$global-radius: 3px;\n$global-menu-padding: 0.7rem 1rem !default;\n$menu-items-padding: $global-menu-padding !default;\n$body-antialiased: true;\n$global-margin: 1rem;\n$global-padding: 1rem;\n$global-position: 1rem;\n$global-weight-normal: normal;\n$global-weight-bold: bold;\n$global-width: rem-calc(1100);\n$grid-row-width: $global-width;\n$grid-container: $global-width;\n\n/// Sets the text direction of the CSS. Can be either `ltr` or `rtl`.\n/// @type Keyword\n$global-text-direction: ltr !default;\n$global-left: if($global-text-direction == rtl, right, left);\n$global-right: if($global-text-direction == rtl, left, right);\n\n// Internal variable that contains the flex justifying options\n$-exo-flex-justify: -exo-flex-justify($global-text-direction);\n\n$sizes: (\n  margin: rem-calc(30),\n  padding: rem-calc(30),\n  font: rem-calc(16),\n);\n\n/// Global tolerance for color pick contrast.\n/// @type Number\n$global-color-pick-contrast-tolerance: 0 !default;\n$contrast-warnings: true !default;\n",".exo-toolbar-sorting {\n\n  .exo-toolbar-section {\n    outline: dotted 1px transparent;\n    outline-offset: -1px;\n  }\n\n  .exo-toolbar-create {\n    display: none;\n  }\n}\n\n.exo-toolbar-sortable {\n\n  .exo-toolbar-element {\n    cursor: move !important;\n  }\n}\n\n.exo-toolbar-sort-placeholder {\n  @include flex;\n  @include flex-align(center, middle);\n  outline: dotted 1px transparent;\n  outline-offset: -4px;\n  width: 100%;\n\n  &::before {\n    content: 'Dropzone';\n    display: block;\n    font-weight: 200;\n    font-style: italic;\n\n    [data-exo-align='horizontal'] & {\n      padding: 0 rem-calc(10);\n    }\n\n    [data-exo-align='vertical'] & {\n      padding: rem-calc(10) 0;\n    }\n  }\n}\n","\n.exo-toolbar-dialog-content {\n  display: none;\n}\n",".exo-toolbar-item-type-create {\n\n  .exo-toolbar-element-mark {\n    @include flex-align-self(top);\n\n    [data-exo-align='vertical'] & {\n      margin: rem-calc(2) auto;\n    }\n\n    [data-exo-align='horizontal'] & {\n      margin: rem-calc(2);\n    }\n\n    @each $key, $sizes in $region-sizes {\n      [data-exo-size='#{$key}'] & {\n        width: rem-calc(map-get($sizes, 'element') - 4) !important;\n        height: rem-calc(map-get($sizes, 'element') - 4) !important;\n      }\n    }\n  }\n}\n",".exo-toolbar-item-type-user {\n\n  .exo-toolbar-element-image {\n    border-radius: 50%;\n    overflow: hidden;\n    transform: scale(0.7);\n  }\n}\n",".exo-toolbar-item-type-toggle {\n\n  .exo-toolbar-item-aside-label {\n    display: none !important;\n  }\n}\n"]}