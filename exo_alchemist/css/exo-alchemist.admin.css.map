{"version":3,"sources":["exo_alchemist/src/ExoThemeProvider/ExoAlchemist/scss/admin/_global.scss","../../Sites/augustAsh/msep/web/modules/contrib/exo/exo/src/scss/base/_variables.scss","../../Sites/augustAsh/msep/web/modules/contrib/exo/exo/src/scss/util/_flex.scss","../../Sites/augustAsh/msep/web/modules/contrib/exo/exo/src/scss/base/_mixins.scss"],"names":[],"mappings":"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","file":"exo-alchemist.admin.css","sourcesContent":[".exo-layout-builder {\n\n  .exo-section {\n    border: 1px solid gray(10);\n    margin: $global-margin * 0.5 !important;\n    padding: $global-padding * 0.5;\n\n    &.exo-section-edit {\n      border: 1px dashed gray(20);\n\n      // a {\n      //   pointer-events: auto !important;\n      // }\n    }\n\n    .exo-section {\n\n      &.exo-section-edit {\n\n        a {\n          pointer-events: none !important;\n        }\n      }\n    }\n  }\n\n  .exo-component-wrapper {\n\n    [tabindex=\"-1\"] {\n      pointer-events: none !important;\n    }\n  }\n\n  .layout-builder--content-preview-disabled {\n\n    .exo-component-wrapper {\n      padding: 0 !important;\n      background: transparent !important;\n      margin: -($global-margin * 0.5) 0 !important;\n      min-height: 0 !important;\n    }\n\n    .exo-component {\n      display: none;\n    }\n\n    .layout-builder-block__content-preview-placeholder-label {\n      display: block;\n      background: gray(80) !important;\n      color: gray(0) !important;\n      font-size: rem-calc(16) !important;\n      flex: 1 1 auto;\n      padding: $global-padding;\n      margin: $global-margin * 0.5 0;\n      box-sizing: border-box;\n    }\n  }\n\n  .field--name-moderation-state {\n    padding: $global-padding;\n    margin: 0 !important;\n    background: gray(5);\n\n    > .exo-form-element {\n      @include flex;\n      max-width: rem-calc(400);\n      background: gray(0);\n      border-radius: $global-radius;\n      margin: 0 auto;\n      box-shadow: 0 0 25px alpha(color(theme-black), 0.1);\n\n      > .exo-form-element {\n        flex: 0 0 auto;\n        margin: $global-margin * 0.5;\n        text-align: center;\n\n        label {\n          text-transform: uppercase;\n          font-size: rem-calc(12);\n        }\n\n        &.exo-form-element-type-select {\n          text-align: left;\n          flex: 1 1 auto;\n        }\n\n        &.exo-form-element-type-item {\n\n          .field-input {\n            font-weight: 700;\n            font-size: rem-calc(20);\n          }\n        }\n      }\n    }\n  }\n\n  .field--name-layout-builder__layout {\n    display: none;\n  }\n}\n\n.exo-component-hide {\n  transition: visibility $global-speed, opacity $global-speed !important;\n  transition-delay: 0 !important;\n\n  &.exo-component-hide-active {\n    visibility: hidden !important;\n    pointer-events: none !important;\n    opacity: 0 !important;\n  }\n}\n\n.exo-component-field-edit {\n  cursor: pointer;\n}\n\n.exo-component-edit,\n.exo-component-edit-active .exo-component-edit {\n  cursor: pointer;\n\n  * {\n    pointer-events: none !important;\n  }\n\n  .exo-component-field-edit {\n    pointer-events: none !important;\n  }\n\n  &.exo-component-edit-active {\n    cursor: auto;\n\n    .exo-component-edit {\n      pointer-events: auto !important;\n    }\n\n    .exo-component-field-edit {\n      pointer-events: auto !important;\n\n      > * {\n        pointer-events: auto !important;\n      }\n\n      [tabindex=\"-1\"] {\n        pointer-events: none !important;\n      }\n    }\n\n    .exo-component-event-allow {\n      pointer-events: auto !important;\n    }\n  }\n\n  &.exo-component-blocked {\n    cursor: not-allowed;\n\n    > .exo-component {\n      pointer-events: none !important;\n      // cursor: not-allowed;\n    }\n\n    &:hover {\n      opacity: 0.9;\n    }\n  }\n}\n\n/**\n * Nested Sections\n */\n.exo-layout-builder .exo-component-edit {\n\n  .layout-builder__add-block a {\n    opacity: 0.5;\n    margin: 0;\n  }\n\n  .exo-component-edit:not(.exo-component-edit-active) {\n    // pointer-events: auto !important;\n\n    * {\n      pointer-events: none !important;\n    }\n  }\n\n  &.exo-component-edit-active {\n\n    .layout-builder__add-block a {\n      pointer-events: auto !important;\n      opacity: 1;\n    }\n  }\n}\n\n.exo-alchemist-shade {\n  position: absolute;\n  z-index: 898;\n  background: alpha(color(theme-black), 0.8);\n  transition: all $global-speed;\n  visibility: hidden;\n  opacity: 0;\n  pointer-events: none !important;\n\n  &.restrict {\n    pointer-events: auto !important;\n  }\n}\n\n.exo-alchemist-highlight {\n  position: absolute;\n  z-index: 897;\n  background: alpha(color(theme-white), 0.9);\n  transition: all $global-speed;\n  visibility: hidden;\n  opacity: 0;\n  pointer-events: none !important;\n\n  &.restrict {\n    pointer-events: auto !important;\n  }\n}\n\n.exo-alchemist-overlay {\n  position: absolute;\n  z-index: 899;\n  transition: all $global-speed;\n  outline: 1px dashed color(theme-warning);\n  outline-offset: 4px;\n  visibility: hidden;\n  opacity: 0;\n  box-shadow: 0 0 25px alpha(color(theme-black), 0.8);\n  pointer-events: none !important;\n}\n\n.exo-alchemist-overlay-header {\n  @include flex;\n  @include flex-align(left, bottom);\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 100%;\n}\n\n.exo-alchemist-ops {\n  @include flex;\n  @include flex-align(left, bottom);\n  flex-wrap: wrap;\n  // @include exo-progress-throbber();\n  pointer-events: auto !important;\n  flex: 1 1 auto;\n\n  > span {\n    @include flex;\n    @include flex-align(center, bottom);\n    flex-wrap: wrap;\n    // flex-wrap: nowrap;\n    line-height: 1.2;\n    font-size: rem-calc(13);\n    box-shadow: 0 -5px 10px -5px alpha(color(theme-black), 0.4);\n    border-radius: $global-radius $global-radius 0 0;\n    overflow: hidden;\n    transform: scaleY(0);\n    transform-origin: center bottom;\n    transition: color $global-speed, background-color $global-speed, transform $global-speed;\n    background: gray(85);\n\n    &.active {\n      transform: scaleY(1);\n    }\n  }\n\n  .exo-description {\n    display: block;\n    background: gray(80);\n    color: gray(0);\n    padding: rem-calc(5 10);\n    white-space: nowrap;\n    // border-radius: $global-radius $global-radius 0 0;\n    margin-right: 2px;\n    font-style: normal;\n  }\n\n  a {\n    @include flex;\n    @include flex-align(center, middle);\n    padding: rem-calc(5 10);\n    white-space: nowrap;\n    background: gray(85);\n    color: gray(0);\n    transition: color $global-speed, background-color $global-speed;\n\n    > * {\n      margin: 0 1.5px;\n    }\n\n    // &:first-child {\n    //   border-radius: $global-radius 0 0 0;\n    // }\n\n    // &:last-child {\n    //   border-radius: 0 $global-radius 0 0;\n    // }\n\n    &:hover,\n    &:active,\n    &:focus {\n      color: gray(0);\n      background: gray(75);\n    }\n\n  }\n}\n\n.exo-alchemist-op-badge {\n  display: inline-block;\n  background: gray(70);\n  border-radius: $global-radius;\n  font-size: rem-calc(9);\n  line-height: rem-calc(9);\n  padding: rem-calc(2 4);\n  text-transform: uppercase;\n  vertical-align: middle;\n}\n\n.exo-alchemist-overlay-close {\n  z-index: 10;\n  pointer-events: auto !important;\n  box-shadow: 0 -5px 10px -5px alpha(color(theme-black), 0.4);\n  transform: scaleY(0);\n  transform-origin: center bottom;\n  transition: color $global-speed, background-color $global-speed, transform $global-speed;\n  margin-left: rem-calc(2);\n\n  a {\n    display: block;\n    padding: rem-calc(5 10);\n    white-space: nowrap;\n    line-height: 1.2;\n    font-size: rem-calc(13);\n    background: alpha(gray(0), 0.7);\n    color: color(theme-alert);\n    transition: color $global-speed, background-color $global-speed;\n    border-radius: $global-radius $global-radius 0 0;\n\n    &:hover,\n    &:focus,\n    &:active {\n      background: color(theme-alert);\n      color: gray(0);\n    }\n\n    .exo-icon-label {\n      display: none;\n    }\n  }\n\n  &.active {\n    transform: scaleY(1);\n  }\n}\n\n.exo-alchemist-target {\n  position: absolute;\n  z-index: 900;\n  transition: all $global-speed;\n  outline: 1px dashed color(theme-warning);\n  outline-offset: 4px;\n  visibility: hidden;\n  opacity: 0;\n  box-shadow: 0 0 25px alpha(color(theme-black), 0.3);\n  pointer-events: none !important;\n\n  &.restrict {\n    pointer-events: auto !important;\n  }\n}\n\n.exo-alchemist-target-header {\n  @include flex;\n  @include flex-align(left, bottom);\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 100%;\n\n  [data-align=\"right\"] & {\n    @include flex-align(right, bottom);\n  }\n}\n\n.exo-alchemist-target-title {\n  @include flex;\n  @include flex-align(center, bottom);\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 100%;\n  transform: scaleY(0);\n  transform-origin: center bottom;\n  transition: color $global-speed, background-color $global-speed, transform $global-speed;\n  white-space: nowrap;\n\n  &.active {\n    transform: scaleY(1);\n  }\n\n  > span {\n    display: block;\n    line-height: 1.2;\n    padding: rem-calc(5 8);\n    background: gray(80);\n    color: gray(0);\n    // font-weight: 700;\n    font-size: rem-calc(11);\n    border-radius: $global-radius $global-radius 0 0;\n  }\n}\n\n.exo-alchemist-target-ops {\n\n  > span {\n    font-size: rem-calc(12);\n  }\n}\n\n.exo-alchemist-target-close {\n  z-index: 10;\n  box-shadow: 0 -5px 15px -5px alpha(color(theme-black), 0.3);\n  transform: scaleY(0);\n  transform-origin: center bottom;\n  transition: color $global-speed, background-color $global-speed, transform $global-speed;\n  margin-left: rem-calc(2);\n\n  a {\n    display: block;\n    padding: rem-calc(5 10);\n    line-height: 1.2;\n    font-size: rem-calc(12);\n    white-space: nowrap;\n    background: alpha(gray(0), 0.7);\n    color: color(theme-alert);\n    transition: color $global-speed, background-color $global-speed;\n    border-radius: $global-radius $global-radius 0 0;\n\n    &:hover,\n    &:focus,\n    &:active {\n      background: color(theme-alert);\n      color: gray(0);\n    }\n\n    .exo-icon-label {\n      display: none;\n    }\n  }\n\n  &.active {\n    transform: scaleY(1);\n  }\n}\n\n.exo-alchemist-overlay .exo-alchemist-breadcrumbs {\n  @include flex-align(left, middle);\n  // display: none;\n  display: flex;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: color(theme-black);\n  margin: 0;\n  padding: 0 rem-calc(5);\n  box-shadow: 0 0 25px alpha(color(theme-black), 0.8);\n  pointer-events: auto !important;\n\n  li {\n    list-style: none;\n    padding: rem-calc(5);\n\n    &:last-child {\n\n      a {\n\n        &:after {\n          display: none;\n        }\n      }\n    }\n  }\n\n  a {\n    color: color(theme-white);\n    font-size: rem-calc(12);\n    // text-transform: uppercase;\n  }\n\n  .exo-alchemist-breadcrumb-label {\n    color: color(theme-white);\n    font-size: rem-calc(10);\n    font-weight: 300;\n    opacity: 0.5;\n    text-transform: uppercase;\n  }\n\n  .exo-alchemist-breadcrumb-field {\n\n    a {\n      @include exo-icon(regular, f105, after) {\n        padding-left: rem-calc(10);\n        color: color(theme-white);\n        pointer-events: none !important;\n      }\n    }\n  }\n}\n","////////////////////////////////////////////////////////////////////////////////\n/// Colors\n////////////////////////////////////////////////////////////////////////////////\n\n$global-colors: (\n  theme-black: #1a1a1a,\n  theme-white: #fff,\n  theme-gray: #777,\n  theme-base: #373a3c,\n  theme-offset: #f1f1f1,\n  theme-primary: #2780e3,\n  theme-secondary: #b6bf3d,\n  theme-success: #86c13d,\n  theme-warning: #f1ba2e,\n  theme-alert: #e54040,\n) !default;\n\n// Themes will add colors to this variable.\n$colors: () !default;\n\n////////////////////////////////////////////////////////////////////////////////\n/// Globals\n////////////////////////////////////////////////////////////////////////////////\n$global-speed: 350ms;\n$global-radius: 3px;\n$global-font-size: 100%;\n$global-lineheight: 1.5;\n$global-speed: 350ms;\n$global-radius: 3px;\n$global-menu-padding: 0.7rem 1rem !default;\n$menu-items-padding: $global-menu-padding !default;\n$body-antialiased: true;\n$global-margin: 1rem;\n$global-padding: 1rem;\n$global-position: 1rem;\n$global-weight-normal: normal;\n$global-weight-bold: bold;\n$global-width: rem-calc(1100);\n$grid-row-width: $global-width;\n$grid-container: $global-width;\n\n/// Sets the text direction of the CSS. Can be either `ltr` or `rtl`.\n/// @type Keyword\n$global-text-direction: ltr !default;\n$global-left: if($global-text-direction == rtl, right, left);\n$global-right: if($global-text-direction == rtl, left, right);\n\n// Internal variable that contains the flex justifying options\n$-exo-flex-justify: -exo-flex-justify($global-text-direction);\n\n$sizes: (\n  margin: rem-calc(30),\n  padding: rem-calc(30),\n  font: rem-calc(16),\n);\n\n/// Global tolerance for color pick contrast.\n/// @type Number\n$global-color-pick-contrast-tolerance: 0 !default;\n$contrast-warnings: true !default;\n","@function -exo-flex-justify($text-direction) {\n  $-exo-flex-justify: (\n    'left': if($text-direction == rtl, flex-end, flex-start),\n    'right': if($text-direction == rtl, flex-start, flex-end),\n    'center': center,\n    'justify': space-between,\n    'spaced': space-around,\n  );\n  @return $-exo-flex-justify;\n}\n\n$-exo-flex-align: (\n  'top': flex-start,\n  'bottom': flex-end,\n  'middle': center,\n  'stretch': stretch,\n  'baseline': baseline,\n);\n\n$-exo-flex-direction: (\n  'row': row,\n  'row-reverse': row-reverse,\n  'column': column,\n  'column-reverse': column-reverse,\n);\n\n/// Enables flexbox by adding `display: flex` to the element.\n@mixin flex {\n  display: flex;\n}\n\n/// Horizontally or vertically aligns the items within a flex container.\n///\n/// @param {Keyword} $x [null] - Horizontal alignment to use. Can be `left`, `right`, `center`, `justify`, or `spaced`. Or, set it to `null` (the default) to not set horizontal alignment.\n/// @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`, `bottom`, `middle`, `baseline`, or `stretch`. Or, set it to `null` (the default) to not set vertical alignment.\n@mixin flex-align($x: null, $y: null) {\n  @if $x {\n    @if map-has-key($-exo-flex-justify, $x) {\n      $x: map-get($-exo-flex-justify, $x);\n    }\n    @else {\n      @warn 'flex-grid-row-align(): #{$x} is not a valid value for horizontal alignment. Use left, right, center, justify, or spaced.';\n    }\n  }\n  @if $y {\n    @if map-has-key($-exo-flex-align, $y) {\n      $y: map-get($-exo-flex-align, $y);\n    }\n    @else {\n      @warn 'flex-grid-row-align(): #{$y} is not a valid value for vertical alignment. Use top, bottom, middle, or stretch.';\n    }\n  }\n\n  justify-content: $x;\n  align-items: $y;\n}\n\n/// Vertically align a single column within a flex row. Apply this mixin to a flex column.\n///\n/// @param {Keyword} $y [null] - Vertical alignment to use. Can be `top`, `bottom`, `middle`, or `stretch`. Or, set it to `null` (the default) to not set vertical alignment.\n@mixin flex-align-self($y: null) {\n  @if $y {\n    @if map-has-key($-exo-flex-align, $y) {\n      $y: map-get($-exo-flex-align, $y);\n    }\n    @else {\n      @warn 'flex-grid-column-align(): #{$y} is not a valid value for alignment. Use top, bottom, middle, or stretch.';\n    }\n  }\n\n  align-self: $y;\n}\n\n/// Changes the source order of a flex child. Children with lower numbers appear first in the layout.\n/// @param {Number} $order [0] - Order number to apply.\n@mixin flex-order($order: 0) {\n  order: $order;\n}\n\n/// Change flex-direction\n/// @param {Keyword} $direction [row] - Flex direction to use. Can be\n///   - row (default): same as text direction\n///   - row-reverse: opposite to text direction\n///   - column: same as row but top to bottom\n///   - column-reverse: same as row-reverse top to bottom\n/// @param {Keyword} $medium-direction [$direction] - Flex direction to use for medium. Defaults to $direction but can be `row`, `row-reverse`, `column`, or `column-reverse`.\n/// @param {Keyword} $large-direction [$medium-direction] - Flex direction to use for large. Defaults to $medium-direction but can be `row`, `row-reverse`, `column`, or `column-reverse`.\n@mixin exo-flex-direction($direction: row, $medium-direction: $direction, $large-direction: $medium-direction) {\n  flex-direction: $direction;\n\n  @if ($medium-direction != $direction) {\n\n    @include breakpoint(medium) {\n      flex-direction: $medium-direction;\n    }\n  }\n\n  @if ($large-direction != $medium-direction) {\n\n    @include breakpoint(large) {\n      flex-direction: $large-direction;\n    }\n  }\n}\n\n","/////////////////////\n// Font Face\n// Generates the proper font styles from a linked font file(s)\n// ---------\n@use \"sass:math\";\n\n@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {\n  $src: null;\n\n  $extmods: (\n    eot: '?',\n    svg: '#' + str-replace($name, ' ', '_')\n  );\n\n  $formats: (\n    otf: 'opentype',\n    ttf: 'truetype'\n  );\n\n  @each $ext in $exts {\n    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);\n    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);\n    $src: append($src, url(quote($path + '.' + $extmod)) format(quote($format)), comma);\n  }\n\n  @font-face {\n    font-family: quote($name);\n    font-style: $style;\n    font-weight: $weight;\n    src: $src;\n    font-display: swap;\n  }\n}\n\n/////////////////////\n// Use icon\n\n@function add-backslash($character) {\n  @return unquote('\"') + unquote(str-insert($character, '\\\\', 1)) + unquote('\"');\n}\n\n@mixin exo-icon($package, $hex, $position: before) {\n  &:#{$position} {\n    -webkit-font-smoothing: antialiased; // sass-lint:disable-line no-vendor-prefixes\n    -moz-osx-font-smoothing: grayscale; // sass-lint:disable-line no-vendor-prefixes\n    font-family: 'icon-#{$package}' !important; // stylelint-disable-line declaration-no-important\n    display: inline-block;\n    font-style: normal;\n    font-variant: normal;\n    font-weight: normal;\n    line-height: 1;\n    content: add-backslash($hex);\n    @content;\n  }\n}\n\n/////////////////////\n// Sass CSS triangle mixin, create any kind of triangles with ease\n//\n// Use:\n// @include triangle(direction,width,height,color);\n//\n// Example:\n// $square: 50px;\n// $color: red;\n// selector {\n// *\t @include triangle(bottomright,$square,$square,$color);\n// }\n//\n// Forked from https://github.com/juanbrujo/triangle-mixin.less\n@mixin exo-triangle($direction, $size-h, $size-v, $color) {\n  content: '';\n  display: inline-block;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  transform: scale(0.9999);\n  vertical-align: middle;\n\n  @if $direction == top {\n    border-width: 0 $size-v $size-h;\n    border-color: transparent transparent $color;\n  }\n  @if $direction == bottom {\n    border-width: $size-v $size-h 0 $size-v;\n    border-color: $color transparent transparent;\n  }\n  @if $direction == left {\n    border-width: $size-v $size-h $size-v 0;\n    border-color: transparent $color transparent transparent;\n  }\n  @if $direction == right {\n    border-width: $size-v 0 $size-v $size-h;\n    border-color: transparent transparent transparent $color;\n  }\n  @if $direction == topright {\n    border-width: 0 $size-h $size-v 0;\n    border-color: transparent $color transparent transparent;\n  }\n  @if $direction == bottomright {\n    border-width: 0 0 $size-h $size-v;\n    border-color: transparent transparent $color;\n  }\n  @if $direction == bottomleft {\n    border-width: $size-h 0 0 $size-v;\n    border-color: transparent transparent transparent $color;\n  }\n  @if $direction == topleft {\n    border-width: $size-h $size-v 0 0;\n    border-color: $color transparent transparent;\n  }\n  @content;\n}\n\n/////////////////////\n// Breakpoints\n// --------\n/// Iterates through breakpoints defined in `$breakpoint-classes` and prints the CSS inside the mixin at each breakpoint's media query. Use this with the grid, or any other component that has responsive classes.\n///\n/// @param {Boolean} $small [true] - If `false`, the mixin will skip the `small` breakpoint. Use this with components that don't prefix classes with `small-`, only `medium-` and up.\n/// @param {Boolean} $auto-insert-breakpoints [true] - If `false`, the mixin will iterate over breakpoints without doing the media query itself. Useful for more complex media query generation as in the margin grid.\n@mixin exo-each-breakpoint($small: true, $auto-insert-breakpoints: true) {\n  $list: $breakpoint-classes;\n\n  @if not $small {\n    $list: sl-remove($list, $-zf-zero-breakpoint);\n  }\n\n  @each $name in $list {\n    $old-exo-size: null;\n    @if global-variable-exists(exo-size) {\n      $old-exo-size: $exo-size;\n    }\n    $exo-size: $name !global;\n\n    @if $auto-insert-breakpoints {\n      @include breakpoint($name) {\n        @content;\n      }\n    }\n    @else {\n      @content;\n    }\n\n    $exo-size: $old-exo-size !global;\n  }\n}\n\n@mixin exo-progress-throbber() {\n  .ajax-progress-throbber {\n    position: fixed !important;\n    top: 0 !important;\n    left: 0 !important;\n    right: 0 !important;\n    bottom: 0 !important;\n    background: alpha(theme-black, 0.2) !important;\n    z-index: 1000 !important;\n\n    .throbber {\n      position: fixed !important;\n      top: 50% !important;\n      right: 50% !important;\n      bottom: 50% !important;\n      left: 50% !important;\n      width: 16px !important;\n      height: 16px !important;\n      margin-top: -8px !important;\n      margin-left: -8px !important;\n      text-align: center !important;\n      background-color: color(theme-white) !important;\n      background-position: center center !important;\n      border-radius: 50% !important;\n      padding: $global-padding !important;\n    }\n\n    .message {\n      display: none;\n    }\n  }\n}\n\n/////////////////////\n// Exo Breakpoint Mixin\n// ---------\n/// Generate the `@content` passed to the mixin with a value `$-zf-bp-value` related to a breakpoint, depending on the `$name` parameter:\n/// - For a single value, `$-zf-bp-value` is this value.\n/// - For a breakpoint name, `$-zf-bp-value` is the corresponding breakpoint value in `$map`.\n/// - For \"auto\", `$-zf-bp-value` is the corresponding breakpoint value in `$map` and is passed to `@content`, which is made responsive for each breakpoint of `$map`.\n/// @param {Number|Array|Keyword} $name [auto] - Single value, breakpoint name, or list of breakpoint names to use. \"auto\" by default.\n/// @param {Number|Map} $map - Map of breakpoints and values or single value to use.\n@mixin -exo-breakpoint-value(\n  $name: auto,\n  $map: null\n) {\n  @if $name == auto and type-of($map) == 'map' {\n    // \"auto\"\n    @each $k, $v in $map {\n      @include breakpoint($k) {\n        @include -exo-breakpoint-value($v, $map) {\n          @content;\n        }\n      }\n    }\n  }\n  @else {\n    // breakpoint name\n    @if type-of($name) == 'string' {\n      $name: -exo-get-bp-val($map, $name);\n    }\n\n    // breakpoint value\n    $-exo-bp-value: $name !global;\n    @content;\n  }\n}\n\n/// Removes the focus ring around an element when a mouse input is detected.\n@mixin disable-mouse-outline {\n  [data-whatinput='mouse'] & {\n    outline: 0;\n  }\n}\n\n/// Applies the micro clearfix hack popularized by Nicolas Gallagher. Include this mixin on a container if its children are all floated, to give the container a proper height.\n/// The clearfix is augmented with specific styles to prevent borders in flexbox environments\n/// @link http://nicolasgallagher.com/micro-clearfix-hack/ Micro Clearfix Hack\n/// @link http://danisadesigner.com/blog/flexbox-clear-fix-pseudo-elements/ Flexbox fix\n@mixin clearfix {\n  &::before,\n  &::after {\n    display: table;\n    content: ' ';\n  }\n\n  &::after {\n    clear: both;\n  }\n}\n\n/////////////////////\n// Menu Base Mixin\n// --------\n/// Creates the base styles for a Menu.\n@mixin menu-base {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  position: relative;\n\n  li {\n    @include disable-mouse-outline;\n  }\n\n  a,\n  .button {\n    line-height: 1;\n    text-decoration: none;\n    display: block;\n    padding: $menu-items-padding;\n  }\n\n  // Reset styles of inner elements\n  input,\n  select,\n  a,\n  button {\n    margin-bottom: 0;\n  }\n\n  input {\n    display: inline-block;\n  }\n}\n\n/////////////////////\n// Touchscreen Mixin\n// --------\n/// Apply specific styles based on hover events detected for touchscreen\n/// where primary input is not a mouse.\n@mixin touchscreen() {\n  @media (hover: none) and (pointer: coarse) {\n    @content;\n  }\n}\n\n/////////////////////\n// IE Support Mixin\n// --------\n/// IE can be super fun and doesn't support some of the stuff we are trying to do.\n/// Use this mixin to pass IE specific styles.\n@mixin iesupport() {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/*\n* Dotted Border - A SASS mixin to help you increase spacing between the dots of border-style:dotted.\n* By @florbraz\n* Documentation and examples - github.com/florbraz/Dotted-Border-w-custom-spacing-SCSS-Mixin\n* V1.0\n*/\n@mixin dottedBorder($color: #8f8f8f, $orientation: horizontal, $position: top, $spacing: 5px, $size: 1px) {\n  background-position: $position;\n  @if $orientation == horizontal {\n    background-image: linear-gradient(to right, $color math.div($size, $spacing) * 100%, rgba(255,255,255,0) 0%);\n    background-size: $spacing $size;\n    background-repeat: repeat-x;\n  }\n  @else {\n    background-image: linear-gradient($color math.div($size, $spacing) * 100%, rgba(255,255,255,0) 0%);\n    background-size: $size $spacing;\n    background-repeat: repeat-y;\n  }\n  .ie9 & {\n    border-#{$position}:1px dotted $color;\n  }\n}\n\n/**\n * Hide elements visually, but keep them available for screen readers.\n *\n * Used for information required for screen reader users to understand and use\n * the site where visual display is undesirable. Information provided in this\n * manner should be kept concise, to avoid unnecessary burden on the user.\n * \"!important\" is used to prevent unintentional overrides.\n */\n @mixin visually-hidden($focusable: false) {\n  position: absolute !important;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n  height: 1px;\n  width: 1px;\n  word-wrap: normal;\n\n  /**\n   * The .focusable class extends the .visually-hidden class to allow\n   * the element to be focusable when navigated to via the keyboard.\n   */\n  @if $focusable {\n    &:active,\n    &:focus {\n      position: static !important;\n      clip: auto;\n      overflow: visible;\n      height: auto;\n      width: auto;\n    }\n  }\n}\n"]}