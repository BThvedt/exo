////////////////////////////////////////////////////////////////////////////////
/// Theme Structure
/// -------
/// Place all base structures here.
////////////////////////////////////////////////////////////////////////////////

// Theme support.
$palette: map-merge($global-colors, $colors);

.exo-component-wrapper {
  color: color($component-black);

  &.exo-modifier--text-shadow {
    text-shadow: 0px 2px 5px alpha($component-white, 0.5);
  }

  &.exo-modifier--invert {
    color: color($component-white);

    &.exo-modifier--text-shadow {
      text-shadow: 0px 2px 5px alpha($component-black, 0.5);
    }
  }

  a {
    color: color(theme-primary);
  }

  // Can be assigned to children elements.
  .exo-modifier--color-bg {
    background-color: color($component-white);
  }

  .exo-modifier--color-bg-invert {
    background-color: color($component-black);
  }

  .exo-modifier--color {
    color: color($component-black);
  }

  .exo-modifier--color-invert {
    color: color($component-white);
  }

  // .exo-modifier--color-border {
  //   border-color: color($component-black);
  // }

  // .exo-modifier--color-border-invert {
  //   border-color: color($component-white);
  // }
}

@each $name, $color in $palette {
  $base: $component-white;
  $offset: $component-black;
  $dark: lightness(color($name)) < 60%;
  $contrast: color-contrast(color($name), color($offset));

  .exo-modifier--color-bg-#{$name} + .exo-modifier--color-bg-#{$name} {
    padding-top: 0;
  }

  .exo-modifier--color-bg-#{$name},
  // Nested modifiers should take priority.
  .exo-component-wrapper .exo-modifier--color-bg-#{$name},
  .exo-component-wrapper .exo-modifier--color-bg-#{$name} .exo-modifier-color-bg,
  .exo-modifier--color-bg-content-#{$name} .exo-component-content,
  .exo-modifier--color-bg-content-#{$name} .exo-modifier--content-color-bg {
    @if $dark {
      $base: $component-black;
      $offset: $component-white;
    }

    &,
    &.exo-component-wrapper {
      background-color: color($name);
      color: color($offset);
    }

    a {
      transition: color $global-speed, background-color $global-speed;
      color: color(theme-primary);

      &:hover {
        color: darken(color(theme-primary), 10%);
      }

      @if $contrast < 10 {
        color: color($offset);

        &:hover {
          @if $dark {
            color: darken(color($offset), 10%);
          }
          @else {
            color: lighten(color($offset), 10%);
          }
        }
      }
    }

    &.exo-modifier--text-shadow {
      text-shadow: 0px 2px 8px darken(alpha($name, 0.5), 30%);
    }

    &.exo-modifier--invert {
      color: color($base);
    }

    &.exo-modifier--overlay {

      .exo-component {

        &:before {
          background-color: color($base);
        }
      }

      &.exo-modifier--invert {

        .exo-component {

          &:before {
            background-color: color($offset);
          }
        }
      }
    }

    // Can be assigned to children elements.
    .exo-modifier--color {
      color: color($offset);
    }

    .exo-modifier--color-invert {
      color: color($name);
    }

    .exo-modifier--color-bg {
      background-color: color($name);
    }

    .exo-modifier--color-bg-invert {
      background-color: color($offset);
    }

    .exo-modifier--color-border {
      border-color: color($name);
    }

    .exo-modifier--color-border-invert {
      border-color: color($offset);
    }

    @if $dark {
      .exo-modifier--color-dark {

        &,
        > * {
          color: color($offset) !important;
        }
      }

      .exo-modifier--color-bg-dark {
        background-color: color($offset) !important;
      }

      .exo-modifier--color-border-dark {
        border-color: color($offset) !important;
      }
    }
    @else {
      .exo-modifier--color-light {

        &,
        > * {
          color: color($name);
        }
      }

      .exo-modifier--color-bg-light {
        background-color: color($name) !important;
      }

      .exo-modifier--color-border-light {
        border-color: color($name) !important;
      }
    }
  }

  .exo-modifier--color-border-#{$name} {
    border-color: color($name);
  }
}

.exo-component-selection {

  a {
    background-color: color(theme-primary);

    &:hover,
    &:active {
      border-color: color(theme-primary);
      box-shadow: 0 0 15px alpha(theme-primary, 0.4);

      .exo-component-label {
        opacity: 0.9;
      }
    }
  }
}
